import os
import re
import sys 

smoke = sys.argv[1]
prod = sys.argv[2] 

def replace_commands_in_features(directory, replacements, target_files):
    """
    Открывает указанные .feature-файлы в директории и заменяет команды в соответствии с индивидуальными наборами замен для каждого файла.

    :param directory: Путь к директории с .feature-файлами.
    :param file_replacements: Словарь, где ключи — имена файлов, а значения — словари замен для каждого файла.
    """
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file in file_replacements and file.endswith('.feature'):
                file_path = os.path.join(root, file)
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                replacements = file_replacements[file]
                for old_command, new_command in replacements.items():
                    pattern = re.escape(old_command)  # Экранируем спецсимволы
                    content = re.sub(pattern, new_command, content)
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                print(f"Обработан файл: {file_path}")
            else:
                print(f"Пропущен файл: {file} (нет замен или не целевой файл)")

# Пример использования
if __name__ == "__main__":
    # Укажите путь к директории с .feature-файлами
    directory = rf'{smoke}'  # Путь из аргумента командной строки

    # Определение словаря замен и целевых файлов в зависимости от prod
    if prod == 'fitness':
         file_replacements = {
        '013_Справочники_Запись.feature': {
            "Когда открылось окно '$ЗаголовокФормы$'": "",
            "* Помечаем на удаление существующий элемент": "* Помечаем на удаление существующий элемент\n\t\t\tЕсли текущее окно имеет заголовок '1С:Фитнес клуб КОРП, редакция 4.0 Структурная единица: Фитнес плюс' Тогда\n\t\t\t\tИ Я открываю навигационную ссылку '$НавигационнаяСсылка$'",
            "ФормаЗаписать": "Записать",
            "ФормаПеречитать": "ФормаКнопкаСохранитьИЗакрыть",
            "ФормаУстановитьПометкуУдаления": "Удалить",
            "ЗаписатьИЗакрыть": "ФормаКнопкаСохранитьИЗакрыть"
        },
        '014_Справочники_Копирование.feature': {
            "Когда открылось окно '$ЗаголовокФормы$'": "",
            "ФормаЗаписать": "ФормаКнопкаСохранитьИЗакрыть"
        },
        '023_Документы_Запись.feature': {
            "Когда открылось окно '$ЗаголовокФормы$'": "",
            "* Помечаем на удаление существующий элемент": "* Помечаем на удаление существующий элемент\n\t\t\tЕсли текущее окно имеет заголовок '1С:Фитнес клуб КОРП, редакция 4.0 Структурная единица: Фитнес плюс' Тогда\n\t\t\t\tИ Я открываю навигационную ссылку '$НавигационнаяСсылка$'",
            "* Отменим проведение документа": "* Отменим проведение документа\n\t\t\tЕсли текущее окно имеет заголовок '1С:Фитнес клуб КОРП, редакция 4.0 Структурная единица: Фитнес плюс' Тогда\n\t\t\t\tИ Я открываю навигационную ссылку '$НавигационнаяСсылка$'",
            "ФормаЗаписать": "КнопкаЗаписать",
            "ФормаПеречитать": "ФормаПровести",
            "ФормаУстановитьПометкуУдаления": "Удалить",
            "ФормаПровестиИЗакрыть": "ФормаКнопкаПровестиИЗакрыть",
            "ФормаОтменаПроведения": "ФормаОтменитьПроведение"
        },
        '024_Документы_Копирование.feature': {
            "Когда открылось окно '$ЗаголовокФормы$'": ""
        },
        '082_Обработки_ФормаОбъекта.feature': {
            "Когда открылось окно '$ЗаголовокФормы$'": ""
        }
    }
        
    elif prod == 'salon':
        file_replacements = {
            '013_Справочники_Запись.feature': {
                "Когда открылось окно '$ЗаголовокФормы$'": "",
                "И Я закрыл все окна клиентского приложения": "И Я закрыл все окна клиентского приложения\n\tИ я открываю основную форму списка документа 'Визит'",
                "Если элемент формы с именем 'ФормаЗаписать' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаЗаписать' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаЗаписать'": "И я нажимаю на кнопку с именем 'ФормаКнопкаЗаписать'",
                "Если элемент формы с именем 'ФормаПеречитать' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаСохранитьИЗакрыть' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаПеречитать'": "И я нажимаю на кнопку с именем 'ФормаКнопкаСохранитьИЗакрыть'",
                "* Помечаем на удаление существующий элемент": "* Помечаем на удаление существующий элемент\n\t\t\tИ Я открываю навигационную ссылку '$НавигационнаяСсылка$'",
                "Если элемент формы с именем 'ФормаУстановитьПометкуУдаления' присутствует на форме Тогда": "Если элемент формы с именем 'Удалить' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаУстановитьПометкуУдаления'": "И я нажимаю на кнопку с именем 'Удалить'",
                "Если элемент формы с именем 'ФормаЗаписатьИЗакрыть' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаСохранитьИЗакрыть' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаЗаписатьИЗакрыть'": "И я нажимаю на кнопку с именем 'ФормаКнопкаСохранитьИЗакрыть'"
            },
            '014_Справочники_Копирование.feature': {
                "Когда открылось окно '$ЗаголовокФормы$'": "",
                "И Я закрыл все окна клиентского приложения": "И Я закрыл все окна клиентского приложения\n\tИ я открываю основную форму списка документа 'Визит'",
                "Если элемент формы с именем 'ФормаСкопировать' присутствует на форме Тогда": "Если элемент формы с именем 'КнопкаСкопировать' присутствует на форме Тогда",
                "Если элемент формы с именем 'ФормаЗаписать' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаЗаписать' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаЗаписать'": "И я нажимаю на кнопку с именем 'ФормаКнопкаЗаписать'",
                "И я нажимаю на кнопку с именем 'ФормаСкопировать'": "И я нажимаю на кнопку с именем 'КнопкаСкопировать'"
            },
            '023_Документы_Запись.feature': {
                "Когда открылось окно '$ЗаголовокФормы$'": "",
                "Если элемент формы с именем 'ФормаЗаписать' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаЗаписать' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаЗаписать'": "И я нажимаю на кнопку с именем 'ФормаКнопкаЗаписать'",
                "Если элемент формы с именем 'ФормаОтменаПроведения' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаОтменитьПроведение' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаОтменаПроведения'": "И я нажимаю на кнопку с именем 'ФормаОтменитьПроведение'",
                "Если элемент формы с именем 'ФормаПеречитать' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаСохранитьИЗакрыть' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаПеречитать'": "И я нажимаю на кнопку с именем 'ФормаКнопкаСохранитьИЗакрыть'",
                "Если элемент формы с именем 'ФормаКнопкаЗаписать' присутствует на форме Тогда": "Если элемент формы с именем 'КнопкаЗаписать' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаКнопкаЗаписать'": "И я нажимаю на кнопку с именем 'КнопкаЗаписать'",
                "* Помечаем на удаление существующий элемент": "* Помечаем на удаление существующий элемент\n\t\t\tИ Я открываю навигационную ссылку '$НавигационнаяСсылка$'",
                "Если элемент формы с именем 'ФормаПровестиИЗакрыть' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаПровести' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаПровестиИЗакрыть'": "И я нажимаю на кнопку с именем 'ФормаПровести'"
            },
            '024_Документы_Копирование.feature': {
                "Когда открылось окно '$ЗаголовокФормы$'": "",
                "Если элемент формы с именем 'ФормаСкопировать' присутствует на форме Тогда": "Если элемент формы с именем 'КнопкаСкопировать' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаСкопировать'": "И я нажимаю на кнопку с именем 'КнопкаСкопировать'"
            },
            '082_Обработки_ФормаОбъекта.feature': {
                "Когда открылось окно '$ЗаголовокФормы$'": "",
                "Если элемент формы с именем 'ФормаПеречитать' присутствует на форме Тогда": "Если элемент формы с именем 'ФормаКнопкаСохранитьИЗакрыть' присутствует на форме Тогда",
                "И я нажимаю на кнопку с именем 'ФормаПеречитать'": "И я нажимаю на кнопку с именем 'ФормаКнопкаСохранитьИЗакрыть'"
            }
        }
    elif prod == 'stoma':
        file_replacements = {
            
        }
    else:
        print(f"Неизвестный продукт: {prod}. Поддерживаемые продукты: fitness, salon, stoma.")
        sys.exit(1)

    # Вызов функции
    replace_commands_in_features(directory, file_replacements)